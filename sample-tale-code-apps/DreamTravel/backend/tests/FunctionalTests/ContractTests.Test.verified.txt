openapi: 3.0.1
info:
  title: DreamTravel
  version: v1
servers:
  - url: /
paths:
  /api/v2/CalculateBestPath:
    post:
      tags:
        - CalculateBestPath
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateBestPathResultResult'
  /api/CalculateBestPath:
    post:
      tags:
        - CalculateBestPath
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CalculateBestPathQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Path'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
  /api/v2/FindCityByCoordinates:
    post:
      tags:
        - FindCityByCoordinates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /api/v2/FindCityByName:
    post:
      tags:
        - FindCityByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  /api/FindLocationOfCity:
    post:
      tags:
        - FindLocationOfCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindCityByNameQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationResult'
  /api/FindNameOfCity:
    post:
      tags:
        - FindNameOfCity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FindCityByCoordinatesQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationResult'
  /:
    get:
      tags:
        - Home
      responses:
        '200':
          description: Success
  /api/LimitCost:
    post:
      tags:
        - LimitCostOfPaths
      parameters:
        - name: costLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: sessionId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Path'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
      deprecated: true
  /api/users/pay:
    post:
      tags:
        - Pay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/PayCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayCommand'
      responses:
        '200':
          description: Success
  /api/users/changePassword:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordCommand'
      responses:
        '200':
          description: Success
  /api/users/login:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginQuery'
      responses:
        '200':
          description: Success
  /api/users/register:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/RegisterUserCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RegisterUserCommand'
      responses:
        '200':
          description: Success
components:
  schemas:
    CalculateBestPathQuery:
      required:
        - cities
      type: object
      properties:
        cities:
          type: array
          items:
            $ref: '#/components/schemas/City'
      additionalProperties: false
    CalculateBestPathResult:
      type: object
      properties:
        bestPaths:
          type: array
          items:
            $ref: '#/components/schemas/Path'
          nullable: true
        cities:
          type: array
          items:
            $ref: '#/components/schemas/City'
          nullable: true
      additionalProperties: false
    CalculateBestPathResultResult:
      type: object
      properties:
        isSuccess:
          type: boolean
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/CalculateBestPathResult'
      additionalProperties: false
    ChangePasswordCommand:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        currentPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    City:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
    CityResult:
      type: object
      properties:
        isSuccess:
          type: boolean
        error:
          $ref: '#/components/schemas/Error'
        data:
          $ref: '#/components/schemas/City'
      additionalProperties: false
    Error:
      type: object
      properties:
        message:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        recoverable:
          type: boolean
      additionalProperties: false
    FindCityByCoordinatesQuery:
      type: object
      properties:
        lat:
          maximum: 90
          minimum: -90
          type: number
          format: double
        lng:
          maximum: 180
          minimum: -180
          type: number
          format: double
      additionalProperties: false
    FindCityByNameQuery:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        logScope:
          $ref: '#/components/schemas/LogScope'
      additionalProperties: false
    LogScope:
      type: object
      properties:
        operationId:
          nullable: true
        operationIdName:
          type: string
          nullable: true
        operationName:
          type: string
          nullable: true
      additionalProperties: false
    LoginQuery:
      type: object
      properties:
        password:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    Path:
      type: object
      properties:
        index:
          type: integer
          format: int32
        startingCity:
          $ref: '#/components/schemas/City'
        endingCity:
          $ref: '#/components/schemas/City'
        optimalDistance:
          type: number
          format: double
        optimalCost:
          type: number
          format: double
        vinietaCost:
          type: number
          format: double
        goal:
          type: number
          format: double
        cost:
          type: number
          format: double
        freeDistance:
          type: number
          format: double
        tollDistance:
          type: number
          format: double
      additionalProperties: false
    PayCommand:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false
    RegisterUserCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    Result:
      type: object
      properties:
        isSuccess:
          type: boolean
        error:
          $ref: '#/components/schemas/Error'
      additionalProperties: false
    ValidationResult:
      type: object
      properties:
        memberNames:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    ApiKey:
      type: apiKey
      description: 'Authentication: Api Key for using Dream Travel'
      name: Authorization
      in: header
security:
  - ApiKey: [ ]